{
  "name": "sol",
  "scopeName": "source.sol",
  "scopeNameComment": "Syntax highlighting for Semantic Operations Language (.sol) files",
  "patterns": [
    {
      "include": "#sol-header"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#fields"
    },
    {
      "include": "#values"
    },
    {
      "include": "#references"
    },
    {
      "include": "#semantic-operators"
    }
  ],
  "repository": {
    "sol-header": {
      "patterns": [
        {
          "match": "^#\\s*(SOL)\\s*-\\s*(Semantic\\s*Operations\\s*Language).*$",
          "captures": {
            "1": {
              "name": "keyword.control.sol.header"
            },
            "2": {
              "name": "string.quoted.double.sol.header"
            }
          },
          "name": "comment.line.sol.header"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "begin": "#",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.sol"
            }
          },
          "end": "$\\n?",
          "name": "comment.line.number-sign.sol"
        }
      ]
    },
    "fields": {
      "patterns": [
        {
          "match": "\\b(id|content|description|steps|actors|type|vision|premise|measurement|unit|goal|issuedBy|reason|timestamp|author|date|language|tags|capabilities|domain|indicators|policies|processes)\\b",
          "name": "variable.parameter.sol"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(Vision|Domain|Concept|Policy|Process|Actor|Indicator|Result|Signal|Observation|Authority|Protocol)\\b",
          "name": "keyword.control.sol.artifact"
        },
        {
          "match": "\\b(coherence|traceability|semantic|narrative|strategic|documentation)\\b",
          "name": "keyword.other.sol.principle"
        }
      ]
    },
    "values": {
      "patterns": [
        {
          "match": "\\b([A-Z][a-zA-Z0-9_]*[a-zA-Z0-9])\\b",
          "name": "constant.language.sol.identifier"
        },
        {
          "match": "\"([^\"\\\\]|\\\\.)*\"",
          "name": "string.quoted.double.sol"
        },
        {
          "match": "'([^'\\\\]|\\\\.)*'",
          "name": "string.quoted.single.sol"
        }
      ]
    },
    "references": {
      "patterns": [
        {
          "match": "\\b(vision|domain|actors|issuedBy):\\s*([A-Z][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "variable.parameter.sol"
            },
            "2": {
              "name": "entity.name.function.sol.reference"
            }
          }
        },
        {
          "match": "\\((Policy|Process|Actor|Vision|Domain):\\s*([A-Z][a-zA-Z0-9_]*)\\)",
          "captures": {
            "1": {
              "name": "keyword.control.sol.artifact"
            },
            "2": {
              "name": "entity.name.function.sol.reference"
            }
          }
        }
      ]
    },
    "semantic-operators": {
      "patterns": [
        {
          "match": "->|→|=>|⇒|⟶",
          "name": "keyword.operator.sol.flow"
        },
        {
          "match": "\\b([A-Z][a-zA-Z0-9_]*)\\s*(\\([^)]*\\))?\\s*([->→])",
          "captures": {
            "1": {
              "name": "entity.name.function.sol.actor"
            },
            "2": {
              "name": "comment.block.sol.context"
            },
            "3": {
              "name": "keyword.operator.sol.flow"
            }
          }
        }
      ]
    }
  }
}
