{
  "name": "sol-support",
  "version": "0.0.3-dev",
  "publisher": "RandyGala",
  "displayName": "SOL - Semantic Operations Language Support",
  "description": "VS Code extension providing comprehensive syntax highlighting, schema validation, semantic navigation and language support for Semantic Operations Language (.sop, .yml, .mdop) files. Based on the SOL project: https://github.com/regd25/sol",
  "author": {
    "name": "Randy Gala",
    "email": "randy@hexy.dev"
  },
  "license": "MIT",
  "keywords": [
    "sol",
    "semantic operations language",
    "yaml",
    "markdown",
    "semantic",
    "operations",
    "language",
    "syntax-highlighting",
    "schema-validation",
    "semantic-navigation",
    "sop",
    "mdop"
  ],
  "categories": [
    "Programming Languages",
    "Linters",
    "Other"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.70.0"
  },
  "main": "./out/extension.js",
  "activationEvents": [
    "onStartupFinished",
    "onCommand:sol.validateSemanticCoherence",
    "onCommand:sol.showArtifactTraceability",
    "onCommand:sol.generateDocumentation",
    "onCommand:sol.formatDocument",
    "onCommand:sol.showVisualizer",
    "onCommand:sol.createTemplate",
    "onCommand:sol.validateReferences",
    "onLanguage:sol",
    "onLanguage:sol-yaml", 
    "onLanguage:sol-markdown"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/regd25/sol.git"
  },
  "homepage": "https://github.com/regd25/sol#readme",
  "bugs": {
    "url": "https://github.com/regd25/sol/issues"
  },
  "contributes": {
    "commands": [
      {
        "command": "sol.validateSemanticCoherence",
        "title": "SOL: Validate Semantic Coherence",
        "category": "SOL"
      },
      {
        "command": "sol.showArtifactTraceability",
        "title": "SOL: Show Artifact Traceability", 
        "category": "SOL"
      },
      {
        "command": "sol.generateDocumentation",
        "title": "SOL: Generate Documentation",
        "category": "SOL"
      },
      {
        "command": "sol.formatDocument",
        "title": "SOL: Format Document",
        "category": "SOL"
      },
      {
        "command": "sol.showVisualizer",
        "title": "SOL: Show Visual Diagram",
        "category": "SOL",
        "icon": "$(graph)"
      },
      {
        "command": "sol.createTemplate",
        "title": "SOL: Create Template",
        "category": "SOL"
      },
      {
        "command": "sol.validateReferences",
        "title": "SOL: Validate References",
        "category": "SOL"
      }
    ],
    "documentFormattingProvider": [
      {
        "language": "sol"
      },
      {
        "language": "sol-yaml"
      },
      {
        "language": "sol-markdown"
      }
    ],
    "documentLinkProvider": [
      {
        "language": "sol"
      },
      {
        "language": "sol-yaml"
      },
      {
        "language": "sol-markdown"
      }
    ],
    "definitionProvider": [
      {
        "language": "sol"
      },
      {
        "language": "sol-yaml"
      },
      {
        "language": "sol-markdown"
      }
    ],
    "completionProvider": [
      {
        "language": "sol"
      },
      {
        "language": "sol-yaml"
      },
      {
        "language": "sol-markdown"
      }
    ],
    "hoverProvider": [
      {
        "language": "sol"
      },
      {
        "language": "sol-yaml"
      },
      {
        "language": "sol-markdown"
      }
    ],
    "grammars": [
      {
        "language": "sol",
        "path": "./syntaxes/sol.tmLanguage.json",
        "scopeName": "source.sop"
      },
      {
        "language": "sol-yaml",
        "path": "./syntaxes/sol-yaml.tmLanguage.json",
        "scopeName": "source.sop.yaml"
      },
      {
        "language": "sol-markdown",
        "path": "./syntaxes/sol-markdown.tmLanguage.json",
        "scopeName": "text.html.markdown.sol"
      }
    ],
    "themes": [
      {
        "label": "SOL Synth84",
        "uiTheme": "vs-dark",
        "path": "./themes/sol-synth84.json"
      }
    ],
    "languages": [
      {
        "aliases": [
          "SOL",
          "Semantic Operations Language"
        ],
        "configuration": "./language-configuration.json",
        "extensions": [
          ".sop"
        ],
        "id": "sol",
        "firstLine": "^#\\s*SOL\\s*-\\s*Semantic\\s*Operations\\s*Language",
        "filenames": [
          "*.sop"
        ]
      },
      {
        "aliases": [
          "SOL YAML",
          "Semantic Operations Language YAML"
        ],
        "configuration": "./language-configuration.json",
        "extensions": [
          ".sop",
          ".sop.yaml",
          ".sop.yml"
        ],
        "id": "sol-yaml",
        "firstLine": "^#\\s*SOL\\s*-\\s*Semantic\\s*Operations\\s*Language|^\\s*(Intent|Context|Authority|Evaluation|Vision|Policy|Concept|Principle|Guideline|Indicator|Process|Procedure|Event|Observation|Result|Actor|Area)\\s*:"
      },
      {
        "aliases": [
          "SOL Markdown",
          "Markdown Operations Documentation"
        ],
        "configuration": "./language-configuration.json",
        "extensions": [
          ".mdop"
        ],
        "id": "sol-markdown",
        "firstLine": "^#\\s*SOL\\s*-\\s*Semantic\\s*Operations\\s*Language",
        "mimetypes": [
          "text/markdown"
        ]
      }
    ],
    "yamlValidation": [
      {
        "fileMatch": [
          "*.sop.yaml",
          "*.sop.yml",
          "*.yml"
        ],
        "url": "./schemas/sol-schema.json"
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": [
          "*.sop"
        ],
        "url": "./schemas/sol-schema.json"
      }
    ]
  },
  "configuration": {
    "type": "object",
    "title": "SOL Configuration",
    "properties": {
      "sol.formatting.insertSpaces": {
        "type": "boolean",
        "default": true,
        "description": "Use spaces instead of tabs for indentation"
      },
      "sol.formatting.tabSize": {
        "type": "number",
        "default": 2,
        "description": "Number of spaces per indentation level"
      },
      "sol.validation.enableSemanticValidation": {
        "type": "boolean",
        "default": true,
        "description": "Enable semantic validation of SOL references"
      },
      "sol.validation.enableSchemaValidation": {
        "type": "boolean",
        "default": true,
        "description": "Enable JSON Schema validation"
      },
      "sol.completion.enableSnippets": {
        "type": "boolean",
        "default": true,
        "description": "Enable SOL artifact templates in autocompletion"
      },
      "sol.visualization.enableDiagrams": {
        "type": "boolean",
        "default": true,
        "description": "Enable visual diagram generation"
      }
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "compile-tests": "tsc -p ./tsconfig.test.json",
    "compile-server": "tsc -p ./server",
    "vscode:prepublish": "npm run compile",
    "watch": "tsc -watch -p ./",
    "test": "npm run compile-tests && jest",
    "test:unit": "npm run compile-tests && jest --testPathPattern=unit",
    "test:integration": "npm run compile-tests && jest --testPathPattern=integration",
    "test:formatter": "npm run compile-tests && jest --testPathPattern=formatter",
    "test:server": "npm run compile-tests && jest --testPathPattern=server",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage"
  },
  "devDependencies": {
    "@types/jest": "^29.0.0",
    "@types/node": "^18.0.0",
    "@types/vscode": "^1.70.0",
    "@vscode/test-electron": "^2.3.0",
    "jest": "^29.0.0",
    "ts-jest": "^29.4.0",
    "typescript": "^4.7.0",
    "vscode-languageclient": "^8.0.0",
    "vscode-languageserver": "^8.0.0",
    "vscode-languageserver-textdocument": "^1.0.0"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src/test"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/test/**",
      "!src/**/*.d.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/src/test/setup.ts"
    ]
  }
}
